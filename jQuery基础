#### jQuery概述

##### 1、描述

##### 2、jQuery版本

- 1x：兼容IE6、7、8等低版本浏览器，官网不再维护。
- 2x：不兼容IE6、7、8等低版本的浏览器，官网不再维护。
- 3x：不兼容IE6、7、8等低版本的浏览器，官网主要维护版本。

#### jQuery基本使用

##### 1、jQuery入口函数

- 等待页面DOM加载完毕后再运行JS，
- 相当于原生JS中的DOMContentLoaded（当初始的 **HTML** 文档被完全加载和解析完成之后，**`DOMContentLoaded`** 事件被触发，而无需等待样式）;
- 不同于原生JS中的load事件（当整个页面及所有依赖资源如样式表和图片都已完成加载时，将触发`load`事件）；

```js
// 第一种写法
$(document).ready(function(){
  console.log('document onready!');
});

// 第二种写法
$(function(){
  console.log('document onready!');
});
```

##### 2、jQuery的顶级对象$

- $是jQuery的别称；
- $同时也是jQuery的顶级对象

##### 3、jQuery对象和DOM对象

- 用原生JS获取来的对象就是DOM对象；
- jQuery方法获取的元素就是jQuery对象；
- jQuery对象本质是：利用$对DOM对象包装后产生的对象（伪数组形式存储）；

##### 4、DOM对象和jQuery对象指向可以项目转换的

因为原生JS比jQuery更大，原生的一些属性和方法jQuery是没有封装，若要使用这些属性就需要把jQuery对象转换成DOM对象才能使用。

```JS
// 1、DOM对象转换成jQuery对象：$(DOM对象)
$('div');

// 2、jQuery对象转换为DOM对象（两种方式）
$('div')[index] // index是索引号
$('div').get[index]; // index是索引号
```

#### jQuery常用API

##### 1、jQuery选择器

###### 1.1、常用的选择器

| 名称       | 用法            | 描述                     |
| ---------- | --------------- | ------------------------ |
| ID选择器   | $('#id')        | 获取指定ID的元素         |
| 全选择器   | $('*')          | 匹配所有元素             |
| 类选择器   | $('.class')     | 获取同一类class的元素    |
| 标签选择器 | $('div')        | 获取同一类标签的所有元素 |
| 并集选择器 | $('div,p,li')   | 选取多个元素             |
| 交集选择器 | $('li.current') | 交集元素                 |

###### 1.2、层级选择器

| 名称       | 用法       | 描述                         |
| ---------- | ---------- | ---------------------------- |
| 子代选择器 | $('ul>li') | 使用>号，获取子层级的元素    |
| 后代选择器 | $('ul li') | 使用空格，代表选择后代选择器 |

###### 1.3、筛选选择器

| 语法       | 用法          | 描述                                              |
| ---------- | ------------- | ------------------------------------------------- |
| :first     | $('li:first') | 获取第一个li元素                                  |
| :last      | $('li:last')  | 获取最一个li元素                                  |
| :eq(index) | $('li:eq(2)') | 获取li元素中，索引号为2的元素，索引号index从0开始 |
| :odd       | $('li:odd')   | 获取li元素中，索引号为奇数的元素                  |
| :even      | $('li:even')  | 获取li元素中，索引号为偶数的元素                  |

###### 1.4、**筛选方法**（重要）

| 语法               | 用法                          | 描述                         |
| ------------------ | ----------------------------- | ---------------------------- |
| parent()           | $('li').parent()              | 查找父级                     |
| children(selector) | $('ul').children('li')        | 相当于$('ul>li')，查找子元素 |
| find(selector)     | $('ul').find('li')            | 相当于$('ul li')，后代选择器 |
| siblings(selector) | $('.first').siblings('li')    | 查找兄弟节点，不包含自己本身 |
| nextAll([expr])    | $('.first').nextAll()         | 查找当前元素之后所有同辈元素 |
| prevtAll([expr])   | $('.first').prevtAll()        | 查找当前元素之前所有同辈元素 |
| hasClass(class)    | $('li').hasClass('protected') | 检查当前元素是否包含某个类名 |



###### 1.5、**隐式迭代**（重要）

遍历内部DOM元素（伪数组形式存储）的过程就叫做**隐式迭代**

即：给匹配到的所有元素进行循环遍历，执行相应的方法，而不用我们进行循环，简化我们的操作；

```html
<div>1</div>
<div>2</div>
<div>3</div>
<script>
  $('div').css('color', 'red'); // 隐式迭代 把所有的div进行遍历重新设置样式
</script> 
```

##### 2、jQuery样式操作
